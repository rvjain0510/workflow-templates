name: Create Release Branch

on:
  issues:
    types: [opened]

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Print issue body
        run: |
          echo "Issue Body:"
          echo "${{ github.event.issue.body }}"

      - name: Extract issue information
        id: extract
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          echo "ISSUE_BODY content:"
          echo "$ISSUE_BODY"

          # Debugging step: Print the issue body to verify its content
          echo "Issue Body Content:"
          echo "$ISSUE_BODY"

          # Extract repository, branch name, and source branch
          REPO=$(echo "$ISSUE_BODY" | awk '/### Source Repository/{getline; print}' | xargs)
          NEW_BRANCH=$(echo "$ISSUE_BODY" | awk '/### Branch Name/{getline; print}' | xargs)
          SOURCE_BRANCH=$(echo "$ISSUE_BODY" | awk '/### Source Branch/{getline; print}' | xargs)

          # Debugging step: Print the extracted values to verify correctness
          echo "Extracted REPO: $REPO"
          echo "Extracted NEW_BRANCH: $NEW_BRANCH"
          echo "Extracted SOURCE_BRANCH: $SOURCE_BRANCH"

          # Set environment variables
          echo "SOURCE_REPOSITORY=$REPO" >> $GITHUB_ENV
          echo "BRANCH_NAME=$NEW_BRANCH" >> $GITHUB_ENV
          echo "SOURCE_BRANCH=$SOURCE_BRANCH" >> $GITHUB_ENV

      - name: Print extracted variables
        run: |
          echo "SOURCE_REPOSITORY=${{ env.SOURCE_REPOSITORY }}"
          echo "BRANCH_NAME=${{ env.BRANCH_NAME }}"
          echo "SOURCE_BRANCH=${{ env.SOURCE_BRANCH }}"

      - name: Create release branch
        run: |
          # Debugging step: Print current directory to verify repository was checked out
          pwd

          # Debugging step: Print repository contents to verify it was cloned correctly
          ls -a

          # Clone the source repository
          git clone https://github.com/${{ env.SOURCE_REPOSITORY }} repo
          cd repo

          # Checkout the source branch
          git checkout ${{ env.SOURCE_BRANCH }}

          # Create and checkout the new release branch
          git checkout -b ${{ env.BRANCH_NAME }}

          # Push the new branch to origin
          git push origin ${{ env.BRANCH_NAME }}

        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_BRANCH_TOKEN }}
