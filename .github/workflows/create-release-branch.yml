name: Create Release Branch

on:
  issues:
    types: [opened]

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Print issue labels
      run: |
        echo "Labels: ${{ toJson(github.event.issue.labels) }}"

    - name: Extract issue information
      id: extract
      run: |
        echo "REPO=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=Source Repository\n).*(?=\n)')" >> $GITHUB_ENV
        echo "NEW_BRANCH=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=Branch Name\n).*(?=\n)')" >> $GITHUB_ENV
        echo "SOURCE_BRANCH=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=Source Branch\n).*(?=\n)')" >> $GITHUB_ENV

    - name: Print extracted variables
      run: |
        echo "REPO=${{ env.REPO }}"
        echo "NEW_BRANCH=${{ env.NEW_BRANCH }}"
        echo "SOURCE_BRANCH=${{ env.SOURCE_BRANCH }}"

    - name: Check for valid repository URL
      if: env.REPO != ''
      run: echo "Repository URL is set to: ${{ env.REPO }}"

    - name: Check out the repository
      if: env.REPO != ''
      run: git clone https://github.com/${{ env.REPO }} repo

    - name: Create release branch
      if: env.REPO != '' && env.NEW_BRANCH != '' && env.SOURCE_BRANCH != ''
      run: |
        cd repo
        git checkout ${{ env.SOURCE_BRANCH }}
        git checkout -b ${{ env.NEW_BRANCH }}
        git push origin ${{ env.NEW_BRANCH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
